import { VitNodeConfig } from '@/vitnode.config';
import { NextIntlClientProvider } from 'next-intl';
import { getMessages, setRequestLocale } from 'next-intl/server';
import { Metadata } from 'next/dist/types';
import React from 'react';

import { RootProvider } from './provider';

export interface RootLayoutProps {
  children: React.ReactNode;
  params: Promise<{
    locale: string;
  }>;
}

export const generateMetadataRootLayout = ({
  metadata: { title, shortTitle },
}: VitNodeConfig): Metadata => {
  return {
    title: {
      default: title,
      template: `%s - ${shortTitle ?? title}`,
    },
    description: 'Generated by create next app',
  };
};

export const RootLayout = async ({
  children,
  className,
  params,
  head,
  ...paramsForRoot
}: React.ComponentProps<typeof RootProvider> &
  RootLayoutProps & {
    className?: string;
    head?: React.ReactNode;
  }) => {
  const { locale } = await params;
  const messages = await getMessages();
  setRequestLocale(locale);

  return (
    <html lang={locale} suppressHydrationWarning>
      {head && <head>{head}</head>}
      <body className={className}>
        <NextIntlClientProvider messages={messages}>
          <RootProvider {...paramsForRoot}>{children}</RootProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
};
